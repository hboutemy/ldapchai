<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.sonatype.oss</groupId>
        <artifactId>oss-parent</artifactId>
        <version>7</version>
    </parent>

    <groupId>com.github.ldapchai</groupId>
    <version>0.8.8-SNAPSHOT</version>
    <artifactId>ldapchai</artifactId>
    <packaging>jar</packaging>
    <name>LDAP Chai Library</name>
    <description>The LDAP Chai API, easy to use LDAP for Java developers.</description>
    <url>https://github.com/ldapchai/ldapchai</url>

    <scm>
        <connection>scm:git:git@www.github.com:ldapchai/ldapchai.git</connection>
        <developerConnection>scm:git:git@www.github.com:ldapchai/ldapchai.git</developerConnection>
        <url>git@github.com:ldapchai/ldapchai.git</url>
    </scm>

    <organization>
        <name>LDAP Chai Project</name>
        <url>https://github.com/ldapchai/ldapchai</url>
    </organization>


    <licenses>
        <license>
            <name>GNU Lesser General Public License, version 2.1 (LGPLv2.1)</name>
            <url>http://www.gnu.org/licenses/lgpl-2.1.html</url>
        </license>
    </licenses>


    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>

        <!-- used by javadoc plugin -->
        <maven.compiler.release>8</maven.compiler.release>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <skipTests>false</skipTests>
        <skipJavadoc>false</skipJavadoc>
        <skipSpotbugs>false</skipSpotbugs>
        <checkstyle.skip>false</checkstyle.skip>

        <maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ss'Z'</maven.build.timestamp.format>

        <!-- git.commit.time is populated via git-commit-id-plugin and results in a (hopefully) reproducible maven build -->
        <project.build.outputTimestamp>${git.commit.time}</project.build.outputTimestamp>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.11.0</version>
        </dependency>
        <dependency>
            <groupId>org.jrivard.xmlchai</groupId>
            <artifactId>xmlchai</artifactId>
            <version>0.1.3</version>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcpkix-jdk18on</artifactId>
            <version>1.79</version>
        </dependency>

        <!-- Directory Access -->
        <dependency>
            <groupId>com.novell.ldap</groupId>
            <artifactId>jldap</artifactId>
            <version>2009-10-07</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.directory.api</groupId>
            <artifactId>api-all</artifactId>
            <version>2.1.7</version>
            <scope>provided</scope>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.11.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-core</artifactId>
            <version>1.37</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-generator-annprocess</artifactId>
            <version>1.37</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-annotations</artifactId>
            <version>4.8.6</version>
            <scope>compile</scope>
        </dependency>

        <!-- logging -->
        <dependency>
            <groupId>ch.qos.reload4j</groupId>
            <artifactId>reload4j</artifactId>
            <version>1.2.26</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/java</directory> <!-- include the src in the main output jar -->
                <targetPath>META-INF/source</targetPath>
            </resource>
        </resources>

        <plugins>

            <!-- limit API usage to Java 8 -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>animal-sniffer-maven-plugin</artifactId>
                <version>1.24</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <signature>
                        <groupId>org.codehaus.mojo.signature</groupId>
                        <artifactId>java18</artifactId>
                        <version>1.0</version>
                    </signature>
                </configuration>
            </plugin>

            <!--reads the git commit info -->
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>4.9.10</version>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                        <phase>initialize</phase>
                    </execution>
                </executions>
                <configuration>
                    <failOnNoGitDirectory>false</failOnNoGitDirectory>
                    <dateFormat>yyyy-MM-dd'T'HH:mm:ss'Z'</dateFormat>
                    <dateFormatTimeZone>Zulu</dateFormatTimeZone>
                    <generateGitPropertiesFile>false</generateGitPropertiesFile>
                    <gitDescribe>
                        <tags>true</tags>
                    </gitDescribe>
                    <excludeProperties>
                        <!-- git.build.time is current timestamp so prevents reproducible build -->
                        <excludeProperty>git.build.time</excludeProperty>
                    </excludeProperties>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>4.8.6.6</version>
                <dependencies>
                    <dependency>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs</artifactId>
                        <version>4.8.6</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <skip>${skipSpotbugs}</skip>
                    <excludeFilterFile>src/build/spotbugs-exclude.xml</excludeFilterFile>
                </configuration>
                <executions>
                    <execution>
                        <phase>test</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.6.3</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>11</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.6.0</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>10.21.1</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <sourceDirectories>
                        <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
                    </sourceDirectories>
                </configuration>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <configuration>
                            <sourceDirectories>
                                <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
                                <sourceDirectory>${project.build.testSourceDirectory}</sourceDirectory>
                            </sourceDirectories>
                            <cacheFile>${project.build.directory}/checkstyle/base/checkstyle-cachefile</cacheFile>
                            <outputFile>${project.build.directory}/checkstyle/base/checkstyle-result.xml</outputFile>
                            <rulesFiles>${project.build.directory}/checkstyle/base/checkstyle-rules.xml</rulesFiles>
                            <propertyExpansion>basedir=${basedir}</propertyExpansion>
                            <configLocation>src/build/checkstyle.xml</configLocation>
                            <suppressionsLocation>src/build/checkstyle-suppression.xml</suppressionsLocation>
                            <consoleOutput>true</consoleOutput>
                            <includeTestSourceDirectory>true</includeTestSourceDirectory>
                            <includeTestResources>false</includeTestResources>
                            <failsOnError>true</failsOnError>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>net.nicoulaj.maven.plugins</groupId>
                <artifactId>checksum-maven-plugin</artifactId>
                <version>1.11</version>
                <executions>
                    <execution>
                        <id>output-checksums</id>
                        <goals>
                            <goal>artifacts</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <algorithms>
                                <algorithm>SHA-1</algorithm>
                                <algorithm>SHA-256</algorithm>
                                <algorithm>SHA-512</algorithm>
                            </algorithms>
                            <failOnError>false</failOnError>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <groupId>org.apache.maven.plugins</groupId>
                <version>3.5.2</version>
                <configuration>
                    <skipTests>${skipTests}</skipTests>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <groupId>org.apache.maven.plugins</groupId>
                <version>3.4.2          </version>
                <executions>
                    <execution>
                        <id>default-jar</id>
                        <configuration>
                            <!-- Exclude NMAS stubs, since we want to use the ones from NMASToolkit.jar, if available -->
                            <excludes>
                                <exclude>com/novell/security/</exclude>
                            </excludes>
                            <archive>
                                <manifest>
                                    <addDefaultEntries>false</addDefaultEntries>
                                    <addDefaultImplementationEntries>false</addDefaultImplementationEntries>
                                    <mainClass>com.novell.ldapchai.util.internal.MainHandler</mainClass>
                                </manifest>
                                <manifestEntries>
                                    <Archive-Type>jar</Archive-Type>
                                    <Archive-UID>854FF0D1B8B9E20E9476A6658AEF997E0ACB09ED6F9B593E086D2C8FBD83DBA8</Archive-UID>
                                    <Implementation-Title>${project.name}</Implementation-Title>
                                    <Implementation-Version>${project.version}</Implementation-Version>
                                    <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
                                    <Implementation-URL>${project.organization.url}</Implementation-URL>
                                    <Implementation-Build-Java-Version>${maven.compiler.target}</Implementation-Build-Java-Version>
                                    <SCM-Git-Commit-ID>${git.commit.id}</SCM-Git-Commit-ID>
                                    <SCM-Git-Commit-ID-Abbrev>${git.commit.id.abbrev}</SCM-Git-Commit-ID-Abbrev>
                                    <SCM-Git-Commit-ID-Description>${git.commit.id.describe}</SCM-Git-Commit-ID-Description>
                                    <SCM-Git-Commit-Timestamp>${git.commit.time}</SCM-Git-Commit-Timestamp>
                                    <SCM-Git-Commit-Dirty>${git.dirty}</SCM-Git-Commit-Dirty>
                                    <SCM-Git-Remote-Origin-URL>${git.remote.origin.url}</SCM-Git-Remote-Origin-URL>
                                </manifestEntries>
                            </archive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.11.2</version>
                <configuration>
                    <doctitle>LDAP Chai API</doctitle>
                    <windowtitle>LDAP Chai API</windowtitle>
                    <notimestamp>true</notimestamp>
                    <additionalJOptions>
                        <additionalJOption>-Xmaxerrs</additionalJOption>
                        <additionalJOption>65536</additionalJOption>
                        <additionalJOption>-Xmaxwarns</additionalJOption>
                        <additionalJOption>65536</additionalJOption>
                    </additionalJOptions>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs-internal</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <skip>${skipJavadoc}</skip>
                            <show>private</show>
                            <outputDirectory>${project.build.directory}/javadoc-internal</outputDirectory>
                            <attach>false</attach> <!-- requires using helper to attach with alternate classifier -->
                            <sourcepath>src/main/java;src/external/java</sourcepath>
                            <failOnWarnings>false</failOnWarnings>
                            <failOnError>false</failOnError>
                            <finalName>${project.artifactId}-${project.version}-internal</finalName>
                            <quiet>true</quiet>
                            <archive>
                                <manifest>
                                    <addDefaultEntries>false</addDefaultEntries>
                                    <addDefaultImplementationEntries>false</addDefaultImplementationEntries>
                                </manifest>
                                <manifestEntries>
                                    <Archive-Type>javadoc</Archive-Type>
                                    <Implementation-Title>${project.name}</Implementation-Title>
                                    <Implementation-Version>${project.version}</Implementation-Version>
                                    <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
                                    <Implementation-URL>${project.organization.url}</Implementation-URL>
                                    <Implementation-Build-Java-Version>${maven.compiler.target}</Implementation-Build-Java-Version>
                                    <SCM-Git-Commit-ID>${git.commit.id}</SCM-Git-Commit-ID>
                                    <SCM-Git-Commit-ID-Abbrev>${git.commit.id.abbrev}</SCM-Git-Commit-ID-Abbrev>
                                    <SCM-Git-Commit-ID-Description>${git.commit.id.describe}</SCM-Git-Commit-ID-Description>
                                    <SCM-Git-Commit-Timestamp>${git.commit.time}</SCM-Git-Commit-Timestamp>
                                    <SCM-Git-Commit-Dirty>${git.dirty}</SCM-Git-Commit-Dirty>
                                    <SCM-Git-Remote-Origin-URL>${git.remote.origin.url}</SCM-Git-Remote-Origin-URL>
                                </manifestEntries>
                            </archive>
                        </configuration>
                    </execution>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <skip>${skipJavadoc}</skip>
                            <failOnError>false</failOnError>
                            <failOnWarnings>true</failOnWarnings>
                            <show>public</show>
                            <finalName>${project.artifactId}-${project.version}</finalName>
                            <outputDirectory>${project.build.directory}/javadoc</outputDirectory>
                            <excludePackageNames>com.novell.security.nmas.*:com.novell.security:com.novell.ldapchai.schema:com.novell.ldapchai.com.novell.ldapchai.cr.nmasAuth:com.novell.ldapchai.util.internal:com.novell.ldapchai.impl:com.novell.ldapchai.impl.*</excludePackageNames>
                            <quiet>true</quiet>
                            <archive>
                                <manifest>
                                    <addDefaultEntries>false</addDefaultEntries>
                                    <addDefaultImplementationEntries>false</addDefaultImplementationEntries>
                                </manifest>
                                <manifestEntries>
                                    <Archive-Type>javadoc</Archive-Type>
                                    <Implementation-Title>${project.name}</Implementation-Title>
                                    <Implementation-Version>${project.version}</Implementation-Version>
                                    <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
                                    <Implementation-URL>${project.organization.url}</Implementation-URL>
                                    <Implementation-Build-Java-Version>${maven.compiler.target}</Implementation-Build-Java-Version>
                                    <SCM-Git-Branch>${git.branch}</SCM-Git-Branch>
                                    <SCM-Git-Commit-ID>${git.commit.id}</SCM-Git-Commit-ID>
                                    <SCM-Git-Commit-ID-Abbrev>${git.commit.id.abbrev}</SCM-Git-Commit-ID-Abbrev>
                                    <SCM-Git-Commit-ID-Description>${git.commit.id.describe}</SCM-Git-Commit-ID-Description>
                                    <SCM-Git-Commit-Timestamp>${git.commit.time}</SCM-Git-Commit-Timestamp>
                                    <SCM-Git-Commit-Dirty>${git.dirty}</SCM-Git-Commit-Dirty>
                                    <SCM-Git-Remote-Origin-URL>${git.remote.origin.url}</SCM-Git-Remote-Origin-URL>
                                </manifestEntries>
                            </archive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.7.0</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>ossrh</serverId>
                    <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                    <autoReleaseAfterClose>true</autoReleaseAfterClose>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.3.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <!-- Exclude NMAS stubs, since we want to use the ones from NMASToolkit.jar, if available -->
                            <excludes>
                                <exclude>com/novell/security/</exclude>
                            </excludes>
                            <archive>
                                <manifest>
                                    <addDefaultImplementationEntries>false</addDefaultImplementationEntries>
                                </manifest>
                                <manifestEntries>
                                    <Archive-Type>source</Archive-Type>
                                    <Implementation-Title>${project.name}</Implementation-Title>
                                    <Implementation-Version>${project.version}</Implementation-Version>
                                    <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
                                    <Implementation-URL>${project.organization.url}</Implementation-URL>
                                    <Implementation-Build-Java-Version>${maven.compiler.target}</Implementation-Build-Java-Version>
                                    <SCM-Git-Branch>${git.branch}</SCM-Git-Branch>
                                    <SCM-Git-Commit-ID>${git.commit.id}</SCM-Git-Commit-ID>
                                    <SCM-Git-Commit-ID-Abbrev>${git.commit.id.abbrev}</SCM-Git-Commit-ID-Abbrev>
                                    <SCM-Git-Commit-ID-Description>${git.commit.id.describe}</SCM-Git-Commit-ID-Description>
                                    <SCM-Git-Commit-Timestamp>${git.commit.time}</SCM-Git-Commit-Timestamp>
                                    <SCM-Git-Commit-Dirty>${git.dirty}</SCM-Git-Commit-Dirty>
                                    <SCM-Git-Remote-Origin-URL>${git.remote.origin.url}</SCM-Git-Remote-Origin-URL>
                                </manifestEntries>
                            </archive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.20.0</version>
                <executions>
                    <execution>
                        <id>attach-descriptor</id>
                        <goals>
                            <goal>attach-descriptor</goal>
                        </goals>
                        <configuration>
                            <!-- deploying using github site -->
                            <skip>true</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.13.0</version>
                <configuration>
                    <generatedSourcesDirectory>src/external/java</generatedSourcesDirectory>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <release>${maven.compiler.release}</release>
                    <showWarnings>true</showWarnings>
                    <compilerArgs>
                        <arg>-Xmaxwarns</arg>
                        <arg>9999</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin> <!-- checks owsp vulnerability database -->
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>11.1.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
        </plugins>
    </reporting>

    <profiles>
        <profile>
            <id>skip-checkstyle</id>
            <properties>
                <checkstyle.skip>true</checkstyle.skip>
            </properties>
        </profile>
        <profile>
            <id>skip-javadoc</id>
            <properties>
                <skipJavadoc>true</skipJavadoc>
            </properties>
        </profile>
        <profile>
            <id>skip-tests</id>
            <properties>
                <skipTests>true</skipTests>
            </properties>
        </profile>
        <profile>
            <id>skip-spotbugs</id>
            <properties>
                <skipSpotbugs>true</skipSpotbugs>
            </properties>
        </profile>
        <profile>
            <id>enable-jarsigner</id>
            <properties>
                <jarsigner.skip>false</jarsigner.skip>
            </properties>
        </profile>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>3.2.7</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>execute-jmh-tests</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.5.0</version>
                        <executions>
                            <execution>
                                <id>run-benchmarks</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <classpathScope>test</classpathScope>
                                    <executable>java</executable>
                                    <arguments>
                                        <argument>-classpath</argument>
                                        <classpath />
                                        <argument>com.novell.ldapchai.cr.CRBenchMark</argument>
                                        <argument>.*</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>


    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <developers>
        <developer>
            <name>Jason Rivard</name>
            <email>https://github.com/jrivard</email>
            <organization>LDAP Chai</organization>
            <organizationUrl>https://github.com/ldapchai/</organizationUrl>
        </developer>
        <developer>
            <name>James Albright</name>
            <email>https://github.com/jalbr74</email>
            <organization>LDAP Chai</organization>
            <organizationUrl>https://github.com/ldapchai/</organizationUrl>
        </developer>
    </developers>
</project>
